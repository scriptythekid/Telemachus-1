
#### notes

* purpose: trying to make telemachus support MASCamera from [1]
* just editing "rpm-camera-support.cfg" and adding the partmodule "RasterPropMonitorCamera" to the stock-docking-port parts makes camera images available in telemachus, BUT rendered cameras seem off (rotated wrongly etc.)
* if i replace all occurences of "JSIExternalCameraSelector" with "MASCamera" in RasterPropMonitorCamera.cs there are no more cameras found by telemachus and therefore no more images rendered/returned
* todos
	* Check what's different at runtime if rpmPartModule == JSIExternalCameraSelector vs MASCamera  (null vs MASCamera)
	* Look into what changed from JSIExternalCameraSelector to MASCamera
		* adapt telemachus camera code accordingly
	* How can I more interactively debug this?

* MAS docu:
	* https://github.com/MOARdV/AvionicsSystems/wiki/Installation "Cameras in MAS behave a little differently than they did in RPM. Most importantly, you should name each camera or docking port camera. To do this: in the editor, right-click the part. There is a button to change its name. Click that, and type in a name. Each name should be unique, and you should probably give it a useful name, since that name can be displayed on MFDs."  
	
	* https://github.com/MOARdV/AvionicsSystems/wiki/MASCamera "The MASCamera is similar to the JSIExternalCameraSelector, but there are important differences to be aware of: ..." 
	
* MAS camera rendering could happen here: 
	* https://github.com/MOARdV/AvionicsSystems/blob/605efd8a54075a00aff6db0867ecfa052419be3f/Source/MASPageCamera.cs
	* 


##### understanding the beast...

src/CameraResponsibility.cs
	Handles HTTP-Requests
		* processCameraManagerIndex ? returns list of available cameras as JSON
			* --> CameraCaptureManager.classedInstance.cameras  holds list of cameras !
		* process -> calls processCameraImageRequest
		* processCameraImageRequest -> sends Imagedata (from a camera) back via HTTP


src/CameraSnapshots/RasterPropMonitorCamera.cs
	* is class RasterPropMonitorCamera : PartModule
	* I guess this is added as partmodule(== unity component) to all Camera parts !?
		* yes! see: Parts/ThirdPartyParts/rpm-camera-support.cfg
	* ... OnStart(PartModule.StartState state)
		* adds itself to CameraCaptureManager  via: ... CameraCaptureManager.Instance.BroadcastMessage("addCamera", this);


* so, when we start/spawn/switch to a vessel, all cameras add themselves to the CamperaCaptureManager
	* CameraCaptureManager is a Singleton,  unsure when/where it's getting instanced... sometime when the mod's DLLs are loaded!?
	* 

* test my understanding
	* keep "JSIExternalCameraSelector" in RasterPropMonitorCamera.cs, testrun, collect Debug Log
		http://127.0.0.1:8085/telemachus/cameras
		"[{"name":"RPMCamera-","type":"RasterPropMonitor","url":"http://127.0.0.1:8085/telemachus/cameras/RPMCamera-"},{"name":"TelemachusFlightCamera","type":"FlightCamera","url":"http://127.0.0.1:8085/telemachus/cameras/TelemachusFlightCamera"}]""
	* replace "JSIExternalCameraSelector" with "MASCamera", testrun, collect Debug Log
		http://127.0.0.1:8085/telemachus/cameras
			-> EMPTY!!
			Logs:
				[LOG 18:59:14.569] [Telemachus Debug] GOT MODULE
[ERR 18:59:14.569] Module RasterPropMonitorCamera threw during OnStart: System.NullReferenceException: Object reference not set to an instance of an object
  at Telemachus.CameraSnapshots.RasterPropMonitorCamera.get_cameraName () [0x00000] in <filename unknown>:0 
  at Telemachus.CameraSnapshots.RasterPropMonitorCamera.DebugInfo () [0x00000] in <filename unknown>:0 
  at Telemachus.CameraSnapshots.RasterPropMonitorCamera.OnStart (StartState state) [0x00000] in <filename unknown>:0 
  at Part.ModulesOnStart () [0x00000] in <filename unknown>:0 

	* compare Logs

